--ANOMALIE CON LIVELLO = 'CRITICA' 
SELECT 
    A.ID AS ID_SENSORE, 
    A.CAUSA AS CAUSA_ANOMALIA, 
    S.TIPO AS TIPO_SENSORE
FROM 
    ANOMALIE A 
JOIN 
    SENSORI S ON A.SENSORE = S.ID
WHERE 
    A.LIVELLO = 'Critica'
ORDER BY 
    A.ID ASC;

--NUMERO DI ROBOT UTILIZZATI DA OGNI MISSIONE
SELECT 
    M.ID AS ID_MISSIONE,
    M.OBIETTIVO AS OBIETTIVO_MISSIONE,
    COUNT(*) AS NUMERO_ROBOT_MISSIONE
FROM 
    UTILIZZO_ROBOT UR 
JOIN 
    ROBOT R ON UR.Robot = R.ID
JOIN 
    MISSIONI M ON M.ID = UR.Missione
GROUP BY 
    M.ID, M.OBIETTIVO
ORDER BY 
    M.ID ASC;
  
--SELEZIONARE LA CAUSA PRINCIPALE DI ANOMALIE
SELECT A.CAUSA, COUNT(*) AS NUM_VOLTE
FROM ANOMALIE A
GROUP BY A.CAUSA
HAVING COUNT(*) = (
    SELECT MAX(NUM_CAUSE)
    FROM (
        SELECT A.CAUSA, COUNT(*) AS NUM_CAUSE
        FROM ANOMALIE A
        GROUP BY A.CAUSA
    ) 
);

--IL NUMERO DI MEMBRI COINVOLTI IN CIASCUNA OPERAZIONE, PER OGNI SENSORE
SELECT 
    S.ID AS ID_SENSORE, 
    O.OPERAZIONE, O.DATA AS DATA_OPERAZIONE, 
    COUNT(O.MEMBRO) AS NUM_MEMBRI
FROM 
    OPERAZIONI O
JOIN 
    MEMBRI M ON O.MEMBRO = M.ID
JOIN 
    SENSORI S ON O.SENSORE = S.ID
GROUP BY 
    S.ID, O.OPERAZIONE, O.DATA
ORDER BY 
    O.DATA;

--IL NUMERO DI INTERVENTI EFFETTUATI DA OGNI MEMBRO DELL'EQUIPAGGIO
SELECT 
    M.ID, CONCAT(M.NOME, CONCAT(' ', M.COGNOME)) AS NOME_COMPLETO, 
    COUNT(*) AS NUM_INTERVENTI_EFFETTUATI
FROM 
    COINVOLGIMENTI C
JOIN 
    MEMBRI M ON C.MEMBRO = M.ID
GROUP BY 
    M.ID, M.NOME, M.COGNOME
ORDER BY 
    M.ID ASC;

--CERCARE IL SENSORE CHE NON HA MAI AVUTO UNA ANOMALIA
SELECT 
    ID
FROM 
    SENSORI
WHERE 
    ID NOT IN
    (SELECT 
        S.ID 
    FROM 
        SENSORI S 
    JOIN 
        ANOMALIE A ON S.ID = A.SENSORE 
    GROUP BY 
        S.ID);
