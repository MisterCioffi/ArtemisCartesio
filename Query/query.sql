--ANOMALIE CON LIVELLO = 'CRITICA' 
SELECT A.ID
FROM ANOMALIE A
WHERE A.Livello = 'Critica';
--TESTATA

--RICERCA DEL NUMERO DI ROBOT UTILIZZATI DA OGNI MISSIONE
SELECT 
    M.ID AS ID_MISSIONE,
    COUNT(*) AS NUMERO_ROBOT_MISSIONE
FROM 
    UTILIZZO_ROBOT UR 
JOIN 
    ROBOT R ON UR.Robot = R.ID
JOIN 
    MISSIONI M ON M.ID = UR.Missione
GROUP BY 
    M.ID
ORDER BY 
    M.ID ASC;
--TESTATA
  
--SELEZIONARE LA CAUSA PRINCIPALE DI ANOMALIE
SELECT A.CAUSA, COUNT(*) AS NUM_VOLTE
FROM ANOMALIE A
GROUP BY A.CAUSA
HAVING COUNT(*) = (
    SELECT MAX(NUM_CAUSE)
    FROM (
        SELECT A.CAUSA, COUNT(*) AS NUM_CAUSE
        FROM ANOMALIE A
        GROUP BY A.CAUSA
    ) 
);
--TESTATA

--IL NUMERO DI MEMBRI COINVOLTI IN CIASCUNA OPERAZIONE ATTIVA, PER OGNI SENSORE
SELECT S.ID AS ID_SENSORE, O.Operazione, COUNT(O.Membro) AS NUM_MEMBRI
FROM OPERAZIONI O
JOIN MEMBRI M ON O.Membro = M.ID
JOIN SENSORI S ON O.Sensore = S.ID
WHERE O.Stato_Operativo = 'Attivo'
GROUP BY S.ID, O.Operazione;
--TESTATA

--IL NUMERO DI INTERVENTI EFFETTUATI DA OGNI MEMBRO DELL'EQUIPAGGIO
SELECT M.ID, M.Nome, M.Cognome, COUNT(*) AS NUM_INTERVENTI_EFFETTUATI
FROM COINVOLGIMENTI C
JOIN MEMBRI M ON C.Membri = M.ID
GROUP BY M.ID;

--CERCARE IL SENSORE CHE NON HA MAI AVUTO UNA ANOMALIA(?)
SELECT S.ID
FROM SENSORI
WHERE S.ID NOT IN
(SELECT S.ID 
		FROM SENSORI S JOIN ANOMALIEA A 
		ON S.ID = A.Sensori 
		GROUP BY S.ID);
